<?xml version="1.0"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <configSections>
    <section name="RetryPolicyConfiguration" type="Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.Configuration.RetryPolicyConfigurationSettings, Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.Configuration, Version=6.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="typeRegistrationProvidersConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Common.Configuration.TypeRegistrationProvidersConfigurationSection, Microsoft.Practices.EnterpriseLibrary.Common, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="unity" type=" Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration, Version=2.1.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
    <section name="system.identityModel.services" type="System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
  </configSections>
  <RetryPolicyConfiguration defaultRetryStrategy="Fixed Interval Retry Strategy" defaultSqlConnectionRetryStrategy="Backoff Retry Strategy" defaultSqlCommandRetryStrategy="Incremental Retry Strategy" defaultAzureStorageRetryStrategy="Fixed Interval Retry Strategy" defaultAzureServiceBusRetryStrategy="Fixed Interval Retry Strategy">
    <incremental name="Incremental Retry Strategy" retryIncrement="00:00:01" maxRetryCount="10" />
    <fixedInterval name="Fixed Interval Retry Strategy" retryInterval="00:00:01" maxRetryCount="10" />
    <exponentialBackoff name="Backoff Retry Strategy" minBackoff="00:00:01" maxBackoff="00:00:30" deltaBackoff="00:00:10" maxRetryCount="10" />
  </RetryPolicyConfiguration>
  <typeRegistrationProvidersConfiguration>
    <clear />
    <add name="Caching" sectionName="cachingConfiguration" />
    <add name="Cryptography" sectionName="securityCryptographyConfiguration" />
    <add name="Exception Handling" sectionName="exceptionHandling" />
    <add name="Instrumentation" sectionName="instrumentationConfiguration" />
    <add name="Logging" sectionName="loggingConfiguration" />
    <add name="Policy Injection" sectionName="policyInjection" />
    <add name="Security" sectionName="securityConfiguration" />
    <add name="Data Access" providerType="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSyntheticConfigSettings, Microsoft.Practices.EnterpriseLibrary.Data" />
    <add name="Validation" providerType="Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.ValidationTypeRegistrationProvider, Microsoft.Practices.EnterpriseLibrary.Validation" />
    <add sectionName="RetryPolicyConfiguration" name="RetryPolicyConfiguration" />
  </typeRegistrationProvidersConfiguration>
  <cachingConfiguration defaultCacheManager="BusinessCalendarCacheManager">
    <cacheManagers>
      <add name="BusinessCalendarCacheManager" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="50000" numberToRemoveWhenScavenging="1000" backingStoreName="NullBackingStore" />
      <add name="TenantsCacheManager" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="50000" numberToRemoveWhenScavenging="1000" backingStoreName="NullBackingStore" />
      <add name="FolderTypeCacheManager" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="50000" numberToRemoveWhenScavenging="1000" backingStoreName="NullBackingStore" />
      <add name="DocumentTypeCacheManager" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="50000" numberToRemoveWhenScavenging="1000" backingStoreName="NullBackingStore" />
      <add name="DocumentGroupCacheManager" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="50000" numberToRemoveWhenScavenging="1000" backingStoreName="NullBackingStore" />
      <add name="DocumentTypeVariantCacheManager" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="50000" numberToRemoveWhenScavenging="1000" backingStoreName="NullBackingStore" />
    </cacheManagers>
    <backingStores>
      <add type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="NullBackingStore" />
    </backingStores>
  </cachingConfiguration>
  <loggingConfiguration name="" tracingEnabled="true" defaultCategory="General">
    <listeners>
      <add name="Event Log Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" source="TotalAgility" formatter="Text Formatter" log="" machineName="." traceOutputOptions="None" />
    </listeners>
    <formatters>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" template="Timestamp: {timestamp}{newline}&#xD;&#xA;Message: {message}{newline}&#xD;&#xA;Category: {category}{newline}&#xD;&#xA;Priority: {priority}{newline}&#xD;&#xA;EventId: {eventid}{newline}&#xD;&#xA;Severity: {severity}{newline}&#xD;&#xA;Title:{title}{newline}&#xD;&#xA;Machine: {localMachine}{newline}&#xD;&#xA;App Domain: {localAppDomain}{newline}&#xD;&#xA;ProcessId: {localProcessId}{newline}&#xD;&#xA;Process Name: {localProcessName}{newline}&#xD;&#xA;Thread Name: {threadName}{newline}&#xD;&#xA;Win32 ThreadId:{win32ThreadId}{newline}&#xD;&#xA;Extended Properties: {dictionary({key} - {value}{newline})}" name="Text Formatter" />
    </formatters>
    <categorySources>
      <add switchValue="All" name="General">
        <listeners>
          <add name="Event Log Listener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events" />
      <notProcessed switchValue="All" name="Unprocessed Category" />
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="Event Log Listener" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <exceptionHandling>
    <exceptionPolicies>
      <add name="Agility Exception Policy">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" logCategory="General" eventId="100" severity="Error" title="TotalAgility" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" priority="0" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <container>
      <!--KTA Logging - uncomment the below tag to enable logging of method calls-->
      <!--<extension type="Agility.Server.Common.Logging.LogMethodRegistration, Agility.Server.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />-->
      <!--Start of Repositories-->
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IActivityRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.ActivityRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IAuditRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.AuditRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.ICategoryRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.CategoryRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.ICaseRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.CaseRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IChecklistRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.ChecklistRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IClientRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.ClientRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IFormRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.FormRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IDocumentTypeVariantRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.DocumentTypeVariantRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IJobRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.JobRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.INodeRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.NodeRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IProcessRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.ProcessRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IResourceRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.ResourceRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IServerRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.ServerRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.ITenantRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.TenantRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IThreadPoolRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.ThreadPoolRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IUserRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.UserRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IWorkQueueDefinitionRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.WorkQueueDefinitionRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IWorkQueueRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.WorkQueueRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IVariableRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.VariableRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IBusinessEventRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.BusinessEventRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IMonitorRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.MonitorRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IDashboardRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.DashboardRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.ISecurityRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.SecurityRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IBusinessCalendarRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.BusinessCalendarRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IJobSchedulerRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.JobSchedulerRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IDASRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.DasRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.ITransConfigRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Kofax.CEBPM.Server.Repository.SqlServer.TransformationRepository, Kofax.CEBPM.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cf95ca7471e897ff" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IIntegrationRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.IntegrationRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IProjectRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Kofax.CEBPM.Server.Repository.SqlServer.ProjectRepository, Kofax.CEBPM.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cf95ca7471e897ff" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.ISimulationRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.SimulationRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IExportConnectorRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.ExportConnectorRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IAssetRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.AssetRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.ILinkedServerRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.LinkedServerRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.ITenantConfigurationRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.TenantConfigurationRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IPersonaRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.PersonaRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IQueryRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.QueryRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.ISpaPackageRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.SpaPackageRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Repository.IUpgradeRepository, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Repository.SqlServer.UpgradeRepository, Agility.Server.Repository.SqlServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <!--End of Repositories-->
      <!--Start of Document Services-->
      <register type="Kofax.CEBPM.ThinClient.DocumentServices.Licensing.IKofaxLicensing, Kofax.CEBPM.ThinClient.DocumentServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cf95ca7471e897ff" mapTo="Kofax.CEBPM.ThinClient.DocumentServices.Licensing.KSALicensing, Kofax.CEBPM.ThinClient.DocumentServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cf95ca7471e897ff" />
      <!--End of Document Services-->
      <!--Start of Kfs  TotalAgilityDevicePackageService-->
      <register type="Kofax.TotalAgility.Common.Interfaces.Device.Services.IDevicePackageService, Kofax.TotalAgility.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Kofax.KFS.Services.Implementation.TotalAgilityDevicePackageService, Kofax.KFS.Services.Implementation, Version=4.0.0.0, Culture=neutral, PublicKeyToken=db964f90b09c0340" />
      <!--End of Kfs  TotalAgilityDevicePackageService-->
      <!--Start of Core Services-->
      <register type="Agility.Server.Core.Model.Interfaces.Services.IActivityService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.ActivityService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IAuditService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.AuditService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IBusinessCalendarService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.BusinessCalendarService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IBusinessEventService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.BusinessEventService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.ICaseService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.CaseService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.ICategoryService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.CategoryService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IChecklistService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.ChecklistService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IClientService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.ClientService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.INgClientService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.NgClientService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IFormService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.FormService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IFormVariantService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.FormVariantService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IDocumentTypeVariantService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.DocumentTypeVariantService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IJobService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.JobService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IJobDebugService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.JobDebugService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.INodeService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.NodeService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IProcessService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.ProcessService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IResourceService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.ResourceService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.ISecurityService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.SecurityService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IServerService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.ServerService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.ITenantService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.TenantService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IUserService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.UserService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IVariableService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.VariableService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IWorkQueueDefinitionService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.WorkQueueDefinitionService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.ICaptureConfigurationService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.CaptureConfigurationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.ICaptureDocumentService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.CaptureDocumentService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.ICaptureRuntimeService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.CaptureRuntimeService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.ICaptureRuntimeRestService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.CaptureRuntimeRestService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.ICaptureProjectService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.CaptureProjectService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IIntegrationService, Agility.Server.Integration.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.IntegrationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.ISharepointIntegrationService, Agility.Server.Integration.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.SharepointIntegrationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IDynamicsCrmIntegrationService, Agility.Server.Integration.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.DynamicsCrmIntegrationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IDynamicsAxIntegrationService, Agility.Server.Integration.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.DynamicsAxIntegrationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IDynamicResourceService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.DynamicResourceService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.ITrimIntegrationService, Agility.Server.Integration.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.TrimIntegrationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.ICmisIntegrationService, Agility.Server.Integration.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.CmisIntegrationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.ISimulationService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.SimulationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IExchangeSubscribe, Agility.Server.Integration.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.ExchangeSubscribe, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.INotificationServicePortType, Agility.Server.Integration.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.EmailNotification, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IIntegrationEventService, Agility.Server.Integration.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.IntegrationEventService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.ICaptureKfsService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.CaptureKfsService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IExchangeIntegrationService, Agility.Server.Integration.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.ExchangeIntegrationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IExportConnectorService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.ExportConnectorService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IDocumentViewerService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.DocumentViewerService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IBusinessIntelligenceService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.BusinessIntelligenceService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IIntegrationConfigurationService, Agility.Server.Integration.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.Integration.IntegrationConfigurationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IWebServiceIntegrationService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.Integration.WebServiceIntegrationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IDotNetIntegrationService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.Integration.DotNetIntegrationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.Integration.IDASIntegrationService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.Integration.DASIntegrationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IAssetService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.AssetService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IIntegrationEventHandlerService, Agility.Server.Integration.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.IntegrationEventHandlerService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IKapowIntegrationService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.KapowIntegrationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IImportIntegrationService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.ImportIntegrationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IExportIntegrationService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.ExportIntegrationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.ILinkedServerService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.LinkedServerService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.ILicenseServerService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.LicenseServerService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.ITenantConfigurationService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.TenantConfigurationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IPersonaService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.PersonaService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IQueryService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.QueryService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IPackageService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.PackageService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.ISigningService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.SigningService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.ICCMIntegrationService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.CCMIntegrationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IServerIntegrationService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.ServerIntegrationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.ICCMIntegrationService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.CCMIntegrationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IPerceptiveContentIntegrationService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.PerceptiveContentIntegrationService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Server.Core.Model.Interfaces.Services.IStreamingService, Agility.Server.Core.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Server.Core.Services.StreamingService, Agility.Server.Core.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <!--End of Core Services-->
      <!--Start of Sdk Services-->
      <register type="Agility.Sdk.Model.Interfaces.Services.IActivityService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.ActivityService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <!--<register type="Agility.Sdk.Model.Interfaces.Services.IAuditService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.AuditService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948"/>-->
      <register type="Agility.Sdk.Model.Interfaces.Services.IBeaconService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.BeaconService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IBusinessCalendarService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.BusinessCalendarService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IBusinessEventService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.BusinessEventService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IBusinessRuleService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.BusinessRuleService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.ICaseService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.CaseService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.ICategoryService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.CategoryService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IChecklistService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.ChecklistService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IClientService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.ClientService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.INgClientService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.NgClientService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IDataAccessService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.DataAccessService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IDocumentGenerationService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.DocumentGenerationService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IDynamicResourceService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.DynamicResourceService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IEntityService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.EntityService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IFormService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.FormService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IFormVariantService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.FormVariantService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IDocumentTypeVariantService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.DocumentTypeVariantService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IDocumentVariantService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.DocumentVariantService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IJobService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.JobService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IJobDebugService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.JobDebugService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IProcessService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.ProcessService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IResourceService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.ResourceService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.ISecurityService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.SecurityService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IServerService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.ServerService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.ITenantService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.TenantService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IUserService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.UserService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IWorkQueueDefinitionService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.WorkQueueDefinitionService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.ICaptureConfigurationService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.CaptureConfigurationService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.ICaptureDocumentService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.CaptureDocumentService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.ICaptureRuntimeService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.CaptureRuntimeService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.ICaptureProjectService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.CaptureProjectService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IIntegrationService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.IntegrationService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.ISharepointIntegrationService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.SharepointIntegrationService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IDynamicsCrmIntegrationService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.DynamicsCrmIntegrationService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IDynamicsAxIntegrationService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.DynamicsAxIntegrationService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.ITrimIntegrationService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.TrimIntegrationService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.ICmisIntegrationService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.CmisIntegrationService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.ISimulationService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.SimulationService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IVirtualFolderService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.VirtualFolderService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IExchangeIntegrationService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.ExchangeIntegrationService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.ICaptureKfsService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.CaptureKfsService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IExportConnectorService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.ExportConnectorService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IDocumentViewerService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.DocumentViewerService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IBusinessIntelligenceService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.BusinessIntelligenceService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IAssetService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.AssetService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IKapowIntegrationService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.KapowIntegrationService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.ILinkedServerService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.LinkedServerService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.ILicenseServerService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.LicenseServerService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.ITenantConfigurationService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.TenantConfigurationService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IPersonaService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.PersonaService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IQueryService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.QueryService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IPackageService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.PackageService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.ISigningService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.SigningService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.ISigningIntegrationService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.SigningIntegrationService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.ICCMIntegrationService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.CCMIntegrationService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IDocumentSetService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.DocumentSetService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <register type="Agility.Sdk.Model.Interfaces.Services.IPerceptiveContentIntegrationService, Agility.Sdk.Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" mapTo="Agility.Sdk.Services.PerceptiveContentIntegrationService, Agility.Sdk.Services, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <!--End of Sdk Services-->
    </container>
  </unity>
  <system.diagnostics>
    <switches>
      <add name="DocumentServicesTraceLevelSwitch" value="Error" />
    </switches>
    <sharedListeners>
      <!-- Event log trace listener. By default write only errors. -->
      <add name="EventLogListener" type="System.Diagnostics.EventLogTraceListener" initializeData="TotalAgility">
        <filter type="System.Diagnostics.EventTypeFilter" initializeData="Error" />
      </add>
      <!-- Simple text log for Document Services -->
      <add name="DocumentServicesTxt" initializeData="DocumentServicres.TXT.log" type="System.Diagnostics.TextWriterTraceListener">
        <filter type="System.Diagnostics.EventTypeFilter" initializeData="Off" />
      </add>
    </sharedListeners>
    <sources>
      <source name="Kofax.CEBPM.ThinClient.DocumentServices" switchName="DocumentServicesTraceLevelSwitch">
        <listeners>
          <clear />
          <add name="EventLogListener" />
          <add name="DocumentServicesTxt" />
        </listeners>
      </source>
      <!--<source name="System.ServiceModel"
              switchValue="Information, ActivityTracing"
              propagateActivity="true">
        <listeners>
          <add name="traceListener"
              type="System.Diagnostics.XmlWriterTraceListener"
              initializeData= "c:\log\Traces.svclog" />
        </listeners>
      </source>-->
    </sources>
    <trace autoflush="true">
      <listeners>
        <!--<add name="ThinClientServer" traceOutputOptions="DateTime,ThreadId" type="System.Diagnostics.TextWriterTraceListener" initializeData="c:\ThinClientServerLog.txt">
          <filter type="System.Diagnostics.EventTypeFilter" initializeData="Warning" />
        </add>-->
        <!--to enable TA Logging specify a trace listener with KTALog as name-->
        <!--<add name="KTALog" type="System.Diagnostics.TextWriterTraceListener" initializeData="c:\temp\KTALog.txt">
        </add>-->
      </listeners>
    </trace>
  </system.diagnostics>
  <appSettings>
    <add key="DeploymentType" value="dev" />
    <add key="TotalAgilityHostNameLive" value="localhost/agility.server.web" />
    <add key="TotalAgilityHostNameDev" value="localhost/agility.server.web" />
    <add key="TenantDBConnectionString" value="Server=(local);Trusted_Connection=Yes;Database=Tenants;" />
    <add key="SdkServicesLocation" value="" />
    <add key="CoreServicesLocation" value="" />
    <add key="CoreIntegrationServicesLocation" value="" />
    <add key="IntegrationServerMode" value="false" />
    <add key="OnlineHelpURL" value="https://docshield.kofax.com/KTA" />
    <add key="MainDBConnectionString" value="Server=TSTDBSQL01;Trusted_Connection=Yes;Database='TotalAgility';" />
    <add key="ArchiveDBConnectionString" value="Server=TSTDBSQL01;Trusted_Connection=Yes;Database='TotalAgility_Archive';" />
    <add key="AuditDBConnectionString" value="Server=TSTDBSQL01;Trusted_Connection=Yes;Database='TotalAgility_Audit';" />
    <add key="SimulatorDBConnectionString" value="Server=TSTDBSQL01;Trusted_Connection=Yes;Database='TotalAgility_Simulator';" />
    <add key="ProcessIntelligenceDBConnectionString" value="Server=TSTDBSQL01;Trusted_Connection=Yes;Database='TotalAgility_PI';" />
    <add key="ReportingMainDBConnectionString" value="Server=TSTDBSQL01;Trusted_Connection=Yes;Database='TotalAgility_Reporting';" />
    <add key="ReportingStagingDBConnectionString" value="Server=TSTDBSQL01;Trusted_Connection=Yes;Database='TotalAgility_Reporting_Staging';" />
    <add key="SendMailServer" value="" />
    <add key="SendMailUsername" value="" />
    <add key="SendMailPassword" value="" />
    <add key="SendMailEnableSSL" value="false" />
    <add key="SendMailFromAddress" value="" />
    <add key="SendMailBccList" value="" />
    <add key="IsSingleRoleDeployment" value="false" />
    <add key="IsMultitenantDeployment" value="false" />
    <add key="IsDatabaseWindowsAuthentication" value="false" />
    <add key="IsRttsMultitenantDeployment" value="false" />
    <add key="IsRtts" value="false" />
    <add key="IsAzure" value="false" />
    <add key="IsAzureLicensing" value="false" />
    <add key="TenantManagementUrl" value="/TenantManagement" />
    <add key="WebsiteBaseName" value="TotalAgility" />
    <add key="FormsRootFolder" value="forms" />
    <add key="ProcessDocumentsRootFolder" value="/totalagility/documents/process" />
    <add key="StorageAccountConnectionString" value="UseDevelopmentStorage=true" />
    <add key="MinifyDeployedForms" value="true" />
    <add key="DatabaseRetryCount" value="5" />
    <add key="MinBackOffInMilliseconds" value="1000" />
    <add key="MaxBackOffInMilliseconds" value="30000" />
    <add key="DeltaBackOffInMilliseconds" value="10000" />
    <add key="CacheOption" value="db" />
    <add key="IgnoreCertificateError" value="false" />
    <add key="CommandTimeoutForDatabaseInSeconds" value="0" />
    <add key="MaxNumberOfTenantProcesses" value="100" />
    <add key="TenantExecutorProcessWaitForShutdownIntervalInSeconds"
      value="5" />
    <add key="TenantExecutorProcessShutdownRetryCount" value="5" />
    <add key="ExecutorProcessResponseTimeOutInMilliseconds" value="30000" />
    <add key="SecuredMethodExecutionMaxErrorRetryCount" value="5" />
    <add key="SecuredMethodExecutionErrorRetryIntervalInSeconds"
      value="1" />
    <add key="ScriptExecutorWaitIntervalInSeconds" value="60" />
    <add key="SafeScripting" value="true" />
    <add key="MaxCaptureProjectSize" value="2048" />
    <add key="OPMTCacheRetryCount" value="3" />
    <add key="CustomDatabaseTimeoutInSeconds" value="600" />
    <add key="DebugForms" value="false" />
    <add key="RestServiceRetryCount" value="5" />
    <add key="RecoveryModeSessionId" value="589CE226A8B4F38FEFDB351B7597DF7E" />
    <add key="CorsAllowedOrigins" value="" />
    <add key="CCMProxyURL" value="CCM/Proxy/" />
    <add key="TSExternalServicePortForSyncProcessing" value="9001" />
    <add key="CacheType" value="0" />
    <add key="CacheServer" value="" />
    <add key="CachePort" value="" />
    <add key="CacheName" value="" />
    <add key="CacheExpirationIntervalInSeconds" value="300" />
    <add key="CCMServerURL" value="{http://ccmserver:port}" />
    <add key="PerformanceCountersMultitenanted" value="false" />
    <add key="AesKey" value="C35087C22249433991DDD52A80E729A23020D8250DB341F7BA0B30B57D60A93D" />
    <add key="SecurityIV" value="1D5FB671610C49F8B762E9AAB0139B6A" />
    <add key="AppContext.SetSwitch:Switch.System.Runtime.Serialization.DoNotUseTimeZoneInfo"
      value="false" />
    <add key="KapowRestfulServiceTimeoutMilliseconds" value="300000" />
  </appSettings>
  <location path="HTML5Designer/index.html">
    <system.webServer>
      <staticContent>
        <clientCache cacheControlMode="DisableCache" />
      </staticContent>
    </system.webServer>
  </location>
  <system.webServer>
    <handlers>
      <add name="AgilityFormsServerHandler" verb="*" path="*.form" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler1" verb="*" path="*.formjs" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler2" verb="*" path="*.htm" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler3" verb="*" path="*.html" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler4" verb="*" path="*.upload" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler5" verb="*" path="*.document" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler6" verb="*" path="*.ataladoc" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler7" verb="*" path="*DeployedImages/*.jpg" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler8" verb="*" path="*DeployedImages/*.jpeg" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler9" verb="*" path="*DeployedImages/*.png" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler10" verb="*" path="*DeployedImages/*.gif" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler11" verb="*" path="*DeployedImages/*.svg" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler12" verb="*" path="*.js" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler13" verb="*" path="*.formcss" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler14" verb="*" path="*.debugform" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler15" verb="*" path="*.processdocument" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler16" verb="*" path="*DeployedImages/*.tif" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler17" verb="*" path="*DeployedImages/*.tiff" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler18" verb="*" path="*.jpg" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler19" verb="*" path="*.jpeg" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler20" verb="*" path="*.png" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler21" verb="*" path="*.gif" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler22" verb="*" path="*.svg" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler23" verb="*" path="*.tif" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler24" verb="*" path="*.tiff" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler25" verb="*" path="*.json" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler26" verb="*" path="*.download" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <add name="AgilityFormsServerHandler27" verb="*" path="*.testform" type="Agility.Server.FormsServer.Html.HttpHandler, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
    </handlers>
    <modules runAllManagedModulesForAllRequests="true">
      <add name="AgilityFormsServerModule" type="Agility.Server.FormsServer.Html.HttpModule, Agility.Server.FormsServer.Html, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d86c87abe4a71948" />
      <remove name="WebDAVModule" />
      <add name="SessionAuthenticationModule" type="System.IdentityModel.Services.SessionAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" preCondition="managedHandler" />
    </modules>
    <staticContent>
      <clientCache cacheControlMode="UseMaxAge" cacheControlMaxAge="10.00:00:00" cacheControlCustom="public" />
    </staticContent>
    <security>
      <requestFiltering>
        <requestLimits maxUrl="8096" maxQueryString="11000" maxAllowedContentLength="2147483647" />
      </requestFiltering>
    </security>
    <!--Bug ID:561812 to supress header X-Powered-By  in the response to handle the 
    security vulnerability of restricting info to be displayed along with response header-->
    <httpProtocol>
      <customHeaders>
        <remove name="X-Powered-By" />
        <!--Bug 561807: to prevent framing except by pages on the same origin as the response itself.
            If framing is needed, remove the below Line-->
        <add name="X-Frame-Options" value="SAMEORIGIN" />
        <!--Technical Debt 759487:Use X-XSS-Protection header comply with OWASP 
        Application Security Verification Standard-->
        <add name="X-Xss-Protection" value="1; mode=block" />
      </customHeaders>
    </httpProtocol>
    <!-- These rules are commented back in to configure CCM proxy -->
    <!--
    <rewrite>
      <rules>
        <rule name="CCMInteractiveProxy" stopProcessing="true">
          <match url="CCM/Proxy/Interactive/(.*)" />
          <action type="Rewrite" url="{http://ccmserver:port}/ccm/Interactive/{R:1}" />
        </rule>
        <rule name="CCMDesignerProxy" stopProcessing="true">
          <match url="CCM/Proxy/Repository/(.*)" />
          <action type="Rewrite" url="{http://ccmserver:port}/ccm/Repository/{R:1}" />
        </rule>
        <rule name="ComposerUIJavascriptProxyRule" stopProcessing="true">
          <match url="CCM/Proxy/ccmcomposerui.js" />
          <action type="Rewrite" url="{http://ccmserver:port}/proxy/ccmcomposerui.js" />
        </rule>
        <rule name="ComposerUICssProxyRule" stopProcessing="true">
          <match url="CCM/Proxy/ccmcomposerui.css" />
          <action type="Rewrite" url="{http://ccmserver:port}/proxy/ccmcomposerui.css" />
        </rule>
        <rule name="ComposerTinyMCEProxyRule" stopProcessing="true">
          <match url="CCM/Proxy/tinymce/(.*)" />
          <action type="Rewrite" url="{http://ccmserver:port}/proxy/tinymce/{R:1}" />
        </rule>
        <rule name="ComposerUIImgProxyRule" stopProcessing="true">
          <match url="CCM/Proxy/img/(.*)" />
          <action type="Rewrite" url="{http://ccmserver:port}/proxy/img/{R:1}" />
        </rule>
        <rule name="CCMDesignerStaticProxyRule" stopProcessing="true">
          <match url="CCM/Proxy/static/(.*)" />
          <action type="Rewrite" url="{http://ccmserver:port}/ccm/static/{R:1}" />
        </rule>
        <rule name="ComposerUIFontProxyRule" stopProcessing="true">
          <match url="CCM/Proxy/fonts/(.*)" />
          <action type="Rewrite" url="{http://ccmserver:port}/proxy/fonts/{R:1}" />
        </rule>
      </rules>
      <outboundRules>
          <rule name="HTTPCookie" preCondition="IncomingNoSSLSecureCookie">
            <match serverVariable="RESPONSE_Set_Cookie" pattern="(.*); Secure(.*)" />
            <action type="Rewrite" value="{R:1}{R:2}" />
          </rule>
          <rule name="HTTPSCookie" preCondition="IncomingSSLNoSecureCookie">
            <match serverVariable="RESPONSE_Set_Cookie" pattern="(.*); HttpOnly" />
            <action type="Rewrite" value="{R:1}; Secure; HttpOnly" />
          </rule>
          <preConditions>
            <preCondition name="IncomingNoSSLSecureCookie">
              <add input="{CACHE_URL}" pattern="^http://" />
              <add input="{RESPONSE_Set_Cookie}" pattern=".*; Secure.*" />
          </preCondition>
          <preCondition name="IncomingSSLNoSecureCookie">
            <add input="{CACHE_URL}" pattern="^https://" /><add input="{RESPONSE_Set_Cookie}" pattern=".*; Secure.*" negate="true"/>
          </preCondition>
        </preConditions>
      </outboundRules>
    </rewrite>
    -->
  </system.webServer>
  <!--
    For a description of web.config changes see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.7" />
      </system.Web>
  -->
  <system.identityModel>
    <identityConfiguration>
      <audienceUris mode="Never" />
      <issuerNameRegistry type="Agility.Server.Core.Authentication.CustomIssuerNameRegistry, Agility.Server.Core" />
      <certificateValidation certificateValidationMode="None" />
      <securityTokenHandlers>
        <add type="System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
        <remove type="System.IdentityModel.Tokens.SessionSecurityTokenHandler, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      </securityTokenHandlers>
    </identityConfiguration>
  </system.identityModel>
  <system.identityModel.services>
    <federationConfiguration>
      <wsFederation passiveRedirectEnabled="false" issuer="https://url_set_at_runtime" realm="https://url_set_at_runtime" requireHttps="true" />
      <cookieHandler requireSsl="false" />
    </federationConfiguration>
  </system.identityModel.services>
  <system.web>
    <customErrors defaultRedirect="ErrorPage.aspx" mode="On" />
    <compilation debug="true" targetFramework="4.7" />
    <httpRuntime maxRequestLength="2147483647" executionTimeout="100000" maxUrlLength="11000" maxQueryStringLength="11000" requestValidationMode="4.5" targetFramework="4.7" />
    <hostingEnvironment shadowCopyBinAssemblies="true" />
    <sessionState mode="Off" />
    <pages controlRenderingCompatibilityVersion="4.0" />
    <!-- Uncomment below httpCookies tag when TA site is on https protocol i.e. SSL and when you want cookies to be secure -->
    <!--
    httpCookies will send a cookie over a secure channel. The secure attribute instructs the browser to include the cookie only in requests that are sent over SSL connection.
    In effect the cookie will be missing in requests to addresses starting with http://, but will be included in requests to addresses served over https://.
    This attribute is read by the browser when the cookie is set, in subsequent requests the secure flag will be included in neither request nor response.
    -->
    <httpCookies requireSSL="false" />
  </system.web>
  <system.serviceModel>
    <extensions>
      <behaviorExtensions>
        <add name="jsonErrorHandler" type="Agility.Server.Common.ErrorHandling.JsonErrorHandlerExtensionElement, Agility.Server.Common" />
        <add name="cultureBehavior" type="Agility.Server.Common.Culture.CultureBehaviorExtensionElement, Agility.Server.Common" />
        <add name="WebRequestBehavior" type="Agility.Server.Common.Security.WebRequestBehaviorExtensionElement, Agility.Server.Common" />
        <add name="WcfExceptionHandler" type="Agility.Server.Common.ErrorHandling.WcfExceptionHandlerExtensionElement, Agility.Server.Common" />
      </behaviorExtensions>
    </extensions>
    <behaviors>
      <endpointBehaviors>
        <behavior name="jsonBehavior">
          <cultureBehavior />
          <enableWebScript />
          <jsonErrorHandler />
          <WebRequestBehavior />
        </behavior>
        <behavior name="restBehavior">
          <cultureBehavior />
          <WebRequestBehavior />
          <webHttp />
        </behavior>
        <behavior name="SdkServicesEndPointBehavior">
          <cultureBehavior />
          <WebRequestBehavior />
          <WcfExceptionHandler />
          <dataContractSerializer maxItemsInObjectGraph="2147483647" />
        </behavior>
        <behavior name="CoreServicesEndPointBehavior">
          <cultureBehavior />
          <WebRequestBehavior />
          <WcfExceptionHandler />
          <dataContractSerializer maxItemsInObjectGraph="2147483647" />
        </behavior>
        <behavior name="CoreExecutorEndPointBehaviour">
          <WebRequestBehavior />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="Agility.Server.Web.Services.Behavior">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="false" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <useRequestHeadersForMetadataAddress>
            <defaultPorts>
              <add scheme="http" port="80" />
              <add scheme="https" port="443" />
            </defaultPorts>
          </useRequestHeadersForMetadataAddress>
          <dataContractSerializer maxItemsInObjectGraph="2147483646" />
        </behavior>
        <behavior name="Kofax.TotalAgility.DeviceManagement.Services.Behavior">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="false" />
          <serviceDebug httpHelpPageEnabled="false" httpsHelpPageEnabled="false" includeExceptionDetailInFaults="true" />
          <useRequestHeadersForMetadataAddress>
            <defaultPorts>
              <add scheme="http" port="80" />
              <add scheme="https" port="443" />
            </defaultPorts>
          </useRequestHeadersForMetadataAddress>
          <dataContractSerializer maxItemsInObjectGraph="40960000" />
        </behavior>
        <behavior name="">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
          <dataContractSerializer maxItemsInObjectGraph="2147483646" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="false" />
    <bindings>
      <basicHttpBinding>
        <binding name="BasicHttpBinding_SharepointCommunicatorService" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:10:00" receiveTimeout="00:10:00" allowCookies="true" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" maxBufferPoolSize="524288">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <!-- The following are the different options for securing the services -->
          <!-- All commented out is application manual logon over HTTP -->
          <!-- Only one option should be uncommented at a time -->
          <!-- Azure should use HTTP with anon All commented out-->
          <!-- On premise default: HTTP with Windows authentication-->
          <!-- HTTPS SSL with application logon-->
          <!--<security mode="Transport">
            <transport clientCredentialType="None"/>
          </security>-->
          <!-- HTTP with Windows authentication-->
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Windows" />
          </security>
          <!-- HTTPS SSL with Windows authentication-->
          <!--<security mode="Transport">
            <transport clientCredentialType="Windows" />
          </security>-->
        </binding>
        <binding name="BasicHttpBinding_TrimCommunicatorService" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:10:00" receiveTimeout="00:10:00" allowCookies="true" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" maxBufferPoolSize="524288">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <!-- The following are the different options for securing the services -->
          <!-- All commented out is application manual logon over HTTP -->
          <!-- Only one option should be uncommented at a time -->
          <!-- Azure should use HTTP with anon All commented out-->
          <!-- On premise default: HTTP with Windows authentication-->
          <!-- HTTPS SSL with application logon-->
          <!--<security mode="Transport">
            <transport clientCredentialType="None"/>
          </security>-->
          <!-- HTTP with Windows authentication-->
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Windows" />
          </security>
          <!-- HTTPS SSL with Windows authentication-->
          <!--<security mode="Transport">
            <transport clientCredentialType="Windows" />
          </security>-->
        </binding>
        <binding name="BasicHttpBinding_ExchangeNotificationService" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:10:00" receiveTimeout="00:10:00" allowCookies="true" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" maxBufferPoolSize="524288">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <!-- The following are the different options for securing the services -->
          <!-- All commented out is application manual logon over HTTP -->
          <!-- Only one option should be uncommented at a time -->
          <!-- Azure should use HTTPS SSL with application logon-->
          <!-- On premise default: HTTP with Windows authentication-->
          <!-- HTTPS SSL with application logon-->
          <!--<security mode="Transport">
            <transport clientCredentialType="None"/>
          </security>-->
          <!-- HTTP with Windows authentication-->
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Windows" />
          </security>
          <!-- HTTPS SSL with Windows authentication-->
          <!--<security mode="Transport">
            <transport clientCredentialType="Windows" />
          </security>-->
        </binding>
        <binding name="BasicHttpBinding_DynamicsAxCommunicatorService" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:10:00" receiveTimeout="00:10:00" allowCookies="true" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" maxBufferPoolSize="524288">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <!-- The following are the different options for securing the services -->
          <!-- All commented out is application manual logon over HTTP -->
          <!-- Only one option should be uncommented at a time -->
          <!-- Azure should use HTTP with anon All commented out-->
          <!-- On premise default: HTTP with Windows authentication-->
          <!-- HTTPS SSL with application logon-->
          <!--<security mode="Transport">
            <transport clientCredentialType="None"/>
          </security>-->
          <!-- HTTP with Windows authentication-->
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Windows" />
          </security>
          <!-- HTTPS SSL with Windows authentication-->
          <!--<security mode="Transport">
            <transport clientCredentialType="Windows" />
          </security>-->
        </binding>
        <binding name="BasicHttpBinding_DynamicsAxIntegrationService" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:10:00" receiveTimeout="00:10:00" allowCookies="true" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" maxBufferPoolSize="524288">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <!-- The following are the different options for securing the services -->
          <!-- All commented out is application manual logon over HTTP -->
          <!-- Only one option should be uncommented at a time -->
          <!-- Azure should use HTTP with anon All commented out-->
          <!-- On premise default: HTTP with Windows authentication-->
          <!-- HTTPS SSL with application logon-->
          <!--<security mode="Transport">
            <transport clientCredentialType="None"/>
          </security>-->
          <!-- HTTP with Windows authentication-->
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Windows" />
          </security>
          <!-- HTTPS SSL with Windows authentication-->
          <!--<security mode="Transport">
            <transport clientCredentialType="Windows" />
          </security>-->
        </binding>
        <binding name="BasicHttpBinding_Service" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:10:00" receiveTimeout="00:10:00" allowCookies="true" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" maxBufferPoolSize="524288">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <!-- The following are the different options for securing the services -->
          <!-- All commented out is application manual logon over HTTP -->
          <!-- Only one option should be uncommented at a time -->
          <!-- Azure should use HTTPS SSL with application logon-->
          <!-- On premise default: HTTP with Windows authentication-->
          <!-- HTTPS SSL with application logon-->
          <!--<security mode="Transport">
            <transport clientCredentialType="None"/>
          </security>-->
          <!-- HTTP with Windows authentication-->
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Windows" />
          </security>
          <!-- HTTPS SSL with Windows authentication-->
          <!--<security mode="Transport">
            <transport clientCredentialType="Windows" />
          </security>-->
        </binding>
        <binding name="BasicHttpBinding_RemoteLinkedService" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:10:00" receiveTimeout="00:10:00" allowCookies="true" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" maxBufferPoolSize="524288">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <!-- The following are the different options for securing the services -->
          <!-- All commented out is application manual logon over HTTP -->
          <!-- Only one option should be uncommented at a time -->
          <!-- Azure should use HTTPS SSL with application logon-->
          <!-- On premise default: HTTP with Windows authentication-->
          <!-- HTTPS SSL with application logon-->
          <!--<security mode="Transport">
            <transport clientCredentialType="None"/>
          </security>-->
          <!-- HTTP with Windows authentication-->
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Windows" />
          </security>
          <!-- HTTPS SSL with Windows authentication-->
          <!--<security mode="Transport">
            <transport clientCredentialType="Windows" />
          </security>-->
        </binding>
        <binding name="BasicHttpBinding_LicenseServerService" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:10:00" receiveTimeout="00:10:00" allowCookies="true" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" maxBufferPoolSize="524288">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <!-- The following are the different options for securing the services -->
          <!-- All commented out is application manual logon over HTTP -->
          <!-- Only one option should be uncommented at a time -->
          <!-- Azure should use HTTPS SSL with application logon-->
          <!-- On premise default: HTTP with Windows authentication-->
          <!-- HTTPS SSL with application logon-->
          <!--<security mode="Transport">
            <transport clientCredentialType="None"/>
          </security>-->
          <!-- HTTP with Windows authentication-->
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Windows" />
          </security>
          <!-- HTTPS SSL with Windows authentication-->
          <!--<security mode="Transport">
            <transport clientCredentialType="Windows" />
          </security>-->
        </binding>
        <binding name="BasicHttpStreamingBinding_Service" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:15:00" receiveTimeout="00:10:00" messageEncoding="Mtom" transferMode="Streamed" maxBufferSize="2147483647" allowCookies="false" maxReceivedMessageSize="2147483647" maxBufferPoolSize="524288">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <!-- The following are the different options for securing the services -->
          <!-- All commented out is application manual logon over HTTP -->
          <!-- Only one option should be uncommented at a time -->
          <!-- Azure should use HTTPS SSL with application logon-->
          <!-- On premise default: HTTP with Windows authentication-->
          <!-- HTTPS SSL with application logon-->
          <!--<security mode="Transport">
            <transport clientCredentialType="None"/>
          </security>-->
          <!-- HTTP with Windows authentication-->
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Windows" />
          </security>
          <!-- HTTPS SSL with Windows authentication-->
          <!--<security mode="Transport">
            <transport clientCredentialType="Windows" />
          </security>-->
        </binding>
        <binding name="BasicHttpStreamingBinding_CoreService" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:15:00" receiveTimeout="00:10:00" messageEncoding="Mtom" transferMode="Streamed" maxBufferSize="2147483647" allowCookies="false" maxReceivedMessageSize="2147483647" maxBufferPoolSize="524288">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <!-- The following are the different options for securing the services -->
          <!-- All commented out is application manual logon over HTTP -->
          <!-- Only one option should be uncommented at a time -->
          <!-- Azure should use HTTPS SSL with application logon-->
          <!-- On premise default: HTTP with Windows authentication-->
          <!-- HTTPS SSL with application logon-->
          <!--<security mode="Transport">
            <transport clientCredentialType="None"/>
          </security>-->
          <!-- HTTP with Windows authentication-->
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Windows" />
          </security>
          <!-- HTTPS SSL with Windows authentication-->
          <!--<security mode="Transport">
            <transport clientCredentialType="Windows" />
          </security>-->
        </binding>
        <binding name="BasicHttpBinding_DeviceManagerService" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:10:00" receiveTimeout="00:10:00" allowCookies="true" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" maxBufferPoolSize="524288">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <!-- The following are the different options for securing the services -->
          <!-- Only one option should be uncommented at a time -->
          <!-- Azure should use HTTPS SSL with application logon-->
          <!-- On premise default: HTTP with application logon-->
          <!-- HTTPS SSL with application logon-->
          <!--<security mode="Transport">
                <transport clientCredentialType="None"/>
              </security>-->
          <!-- HTTP with application logon-->
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Windows" />
          </security>
        </binding>
        <binding name="BasicHttpBinding_InsightDataService" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:10:00" receiveTimeout="00:10:00" allowCookies="true" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" maxBufferPoolSize="524288">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <!-- The following are the different options for securing the services -->
          <!-- All commented out is application manual logon over HTTP -->
          <!-- Only one option should be uncommented at a time -->
          <!-- Azure should use HTTPS SSL with application logon-->
          <!-- On premise default: HTTP with Windows authentication-->
          <!-- HTTPS SSL with application logon-->
          <!--<security mode="Transport">
            <transport clientCredentialType="None"/>
          </security>-->
          <!-- HTTP with Windows authentication-->
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Windows" />
          </security>
          <!-- HTTPS SSL with Windows authentication-->
          <!--<security mode="Transport">
            <transport clientCredentialType="Windows" />
          </security>-->
        </binding>
        <!-- used for anonymous binding-->
        <binding name="BasicHttpBinding_SigningIntegrationService" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:10:00" receiveTimeout="00:10:00" allowCookies="true" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" maxBufferPoolSize="524288">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <!-- The following are the different options for securing the services -->
          <!-- All commented out is application manual logon over HTTP -->
          <!-- Only one option should be uncommented at a time -->
          <!-- Azure should use HTTPS SSL with application logon-->
          <!-- On premise default: HTTP with Windows authentication-->
          <!-- HTTPS SSL with application logon-->
          <!--<security mode="Transport">
            <transport clientCredentialType="None"/>
          </security>-->
        </binding>
      </basicHttpBinding>
      <webHttpBinding>
        <binding name="WebHttpBinding_Service" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:10:00" receiveTimeout="00:10:00" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" allowCookies="True">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <!-- The following are the different options for securing the services -->
          <!-- All commented out is application manual logon over HTTP -->
          <!-- Only one option should be uncommented at a time -->
          <!-- Azure should use HTTPS SSL with application logon-->
          <!-- On premise default: HTTP with Windows authentication-->
          <!-- HTTPS SSL with application logon-->
          <!--<security mode="Transport">
            <transport clientCredentialType="None"/>
          </security>-->
          <!-- HTTP with Windows authentication-->
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Windows" />
          </security>
          <!-- HTTPS SSL with Windows authentication-->
          <!--<security mode="Transport">
            <transport clientCredentialType="Windows" />
          </security>-->
        </binding>
        <binding name="WebHttpBinding_DeviceManagerService" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:10:00" receiveTimeout="00:10:00" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <!-- The following are the different options for securing the services -->
          <!-- Only one option should be uncommented at a time -->
          <!-- Azure should use HTTPS SSL with application logon-->
          <!-- On premise default: HTTP with application logon-->
          <!-- HTTPS SSL with application logon-->
          <!--<security mode="Transport">
                <transport clientCredentialType="None"/>
                </security>-->
          <!-- HTTP with application logon-->
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Windows" />
          </security>
        </binding>
        <binding name="WebHttpBinding_DeviceStreamingService" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:10:00" receiveTimeout="00:10:00" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" transferMode="Streamed">
          <!-- The following are the different options for securing the services -->
          <!-- Only one option should be uncommented at a time -->
          <!-- Azure should use HTTPS SSL with application logon-->
          <!-- On premise default: HTTP with application logon-->
          <!-- HTTPS SSL with application logon-->
          <!--<security mode="Transport">
                <transport clientCredentialType="None"/>
                </security>-->
          <!-- HTTP with application logon-->
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Windows" />
          </security>
        </binding>
        <!-- used for anonymous binding-->
        <binding name="WebHttpBinding_SigningIntegrationService" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:10:00" receiveTimeout="00:10:00" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <!-- The following are the different options for securing the services -->
          <!-- All commented out is application manual logon over HTTP -->
          <!-- Only one option should be uncommented at a time -->
          <!-- Azure should use HTTPS SSL with application logon-->
          <!-- On premise default: HTTP with Windows authentication-->
          <!-- HTTPS SSL with application logon-->
          <!--<security mode="Transport">
            <transport clientCredentialType="None"/>
          </security>-->
        </binding>
      </webHttpBinding>
      <netTcpBinding>
        <binding name="TransformationServerExternalService_Binding" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:24:00" receiveTimeout="00:24:00" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <security mode="Transport">
            <transport clientCredentialType="Windows" />
          </security>
        </binding>
      </netTcpBinding>
      <netNamedPipeBinding>
        <binding name="AssemblyExecutorBinding_Service" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:24:00" receiveTimeout="00:24:00" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
        </binding>
      </netNamedPipeBinding>
      <!-- used for HP OXPD 1.6 binding-->
      <customBinding>
        <binding name="HPOxpd_Binding">
          <textMessageEncoding messageVersion="Soap12WSAddressingAugust2004" />
          <httpTransport authenticationScheme="Anonymous" />
        </binding>
        <!-- 
             Tcp bindings are the fastest, but they dont perform well in load balanced environments
             next best thing is to use a custom http binding that uses binary encoding(basichttpbinding uses textencoding)
             so we will use this binding for communicating with core services (we dont have to worry about interoperability because core services are called only by our own internal components)
             refer msdn article on 'Performance Tuning WCF Services, Part 2' for more info.
        -->
        <binding name="CustomBinding_CoreService" openTimeout="00:10:00" closeTimeout="00:10:00" sendTimeout="00:10:00" receiveTimeout="00:10:00">
          <binaryMessageEncoding>
            <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          </binaryMessageEncoding>
          <!--
              <httpTransport authenticationScheme="Negotiate" for http with windows authentication
              <httpsTransport authenticationScheme="Anonymous" for https with None authentication              
          -->
          <httpTransport authenticationScheme="Negotiate" allowCookies="true" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" maxBufferPoolSize="524288" />
        </binding>
      </customBinding>
    </bindings>
    <client>
      <!--START CORE END POINTS -->
      <endpoint name="CoreCaseServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.ICaseService" />
      <endpoint name="CoreActivityServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IActivityService" />
      <endpoint name="CoreClientServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IClientService" />
      <endpoint name="CoreNgClientServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.INgClientService" />
      <endpoint name="CoreFormServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IFormService" />
      <endpoint name="CoreFormVariantServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IFormVariantService" />
      <endpoint name="CoreDocumentTypeVariantServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IDocumentTypeVariantService" />
      <endpoint name="CoreJobServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IJobService" />
      <endpoint name="CoreJobDebugServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IJobDebugService" />
      <endpoint name="CoreProcessServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IProcessService" />
      <endpoint name="CoreServerServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IServerService" />
      <endpoint name="CoreTenantServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.ITenantService" />
      <endpoint name="CoreUserServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IUserService" />
      <endpoint name="CoreResourceServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IResourceService" />
      <endpoint name="CoreBusinessEventServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IBusinessEventService" />
      <endpoint name="CoreCategoryServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.ICategoryService" />
      <endpoint name="CoreChecklistServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IChecklistService" />
      <endpoint name="CoreWorkQueueDefinitionServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IWorkQueueDefinitionService" />
      <endpoint name="CoreSecurityServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.ISecurityService" />
      <endpoint name="CoreBusinessCalendarServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IBusinessCalendarService" />
      <endpoint name="CoreDynamicResourceServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IDynamicResourceService" />
      <endpoint name="CoreCaptureConfigurationServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.ICaptureConfigurationService" />
      <endpoint name="CoreCaptureDocumentServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.ICaptureDocumentService" />
      <endpoint name="CoreCaptureRuntimeServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.ICaptureRuntimeService" />
      <endpoint name="CoreCaptureProjectServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.ICaptureProjectService" />
      <endpoint name="CoreCaptureProjectServiceStreamingEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpStreamingBinding_Service" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.ICaptureProjectService" />
      <endpoint name="CoreSimulationServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.ISimulationService" />
      <endpoint name="CoreCaptureKfsServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.ICaptureKfsService" />
      <endpoint name="CoreDocumentViewerServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IDocumentViewerService" />
      <endpoint name="CoreCaptureRuntimeRestServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.ICaptureRuntimeRestService" />
      <endpoint name="CoreBusinessIntelligenceServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IBusinessIntelligenceService" />
      <endpoint name="CoreIntegrationServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IIntegrationService" />
      <endpoint name="CoreAssetServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IAssetService" />
      <endpoint name="CoreIntegrationEventHandlerServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IIntegrationEventHandlerService" />
      <endpoint name="CoreExportConnectorServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IExportConnectorService" />
      <endpoint name="CoreLinkedServerServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.ILinkedServerService" />
      <endpoint name="CoreLicenseServerServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.ILicenseServerService" />
      <endpoint name="CoreTenantConfigurationServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.ITenantConfigurationService" />
      <endpoint name="CorePersonaServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IPersonaService" />
      <endpoint name="CoreQueryServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IQueryService" />
      <endpoint name="CorePackageServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IPackageService" />
      <endpoint name="CoreSigningServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.ISigningService" />
      <endpoint name="CoreStreamingServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpStreamingBinding_CoreService" contract="Agility.Server.Core.Model.Interfaces.Services.IStreamingService" />
      <!--END CORE END POINTS -->
      <!-- START CORE INTEGRATION END POINTS -->
      <endpoint name="CoreEmailNotificationServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_ExchangeNotificationService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.INotificationServicePortType" />
      <endpoint name="CoreExchangeSubscribeServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IExchangeSubscribe" />
      <endpoint name="CoreSharepointIntegrationServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.ISharepointIntegrationService" />
      <endpoint name="CoreIntegrationEventServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IIntegrationEventService" />
      <endpoint name="CoreDynamicsCrmIntegrationServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IDynamicsCrmIntegrationService" />
      <endpoint name="CoreDynamicsAxIntegrationServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IDynamicsAxIntegrationService" />
      <endpoint name="CoreCmisIntegrationServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.ICmisIntegrationService" />
      <endpoint name="CoreExchangeIntegrationServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IExchangeIntegrationService" />
      <endpoint name="CoreDASIntegrationServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.Integration.IDASIntegrationService" />
      <endpoint name="CoreIntegrationConfigurationServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IIntegrationConfigurationService" />
      <endpoint name="CoreWebServiceIntegrationServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IWebServiceIntegrationService" />
      <endpoint name="CoreDotNetIntegrationServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IDotNetIntegrationService" />
      <endpoint name="CoreImportIntegrationServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IImportIntegrationService" />
      <endpoint name="CoreExportIntegrationServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IExportIntegrationService" />
      <endpoint name="CoreTrimIntegrationServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.ITrimIntegrationService" />
      <endpoint name="CoreKapowIntegrationServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IKapowIntegrationService" />
      <endpoint name="CoreCCMIntegrationServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.ICCMIntegrationService" />
      <endpoint name="CoreServerIntegrationServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IServerIntegrationService" />
      <endpoint name="CorePerceptiveContentIntegrationServiceEndpoint" binding="customBinding" bindingConfiguration="CustomBinding_CoreService" behaviorConfiguration="CoreServicesEndPointBehavior" contract="Agility.Server.Core.Model.Interfaces.Services.IPerceptiveContentIntegrationService" />
      <!-- END CORE INTEGRATION END POINTS -->
      <!--START SDK END POINTS-->
      <endpoint name="SdkCaseServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.ICaseService" />
      <endpoint name="SdkActivityServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IActivityService" />
      <endpoint name="SdkBeaconServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IBeaconService" />
      <endpoint name="SdkClientServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IClientService" />
      <endpoint name="SdkFormServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IFormService" />
      <endpoint name="SdkFormVariantServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IFormVariantService" />
      <endpoint name="SdkDocumentTypeVariantServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IDocumentTypeVariantService" />
      <endpoint name="SdkDocumentVariantServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IDocumentVariantService" />
      <endpoint name="SdkJobServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IJobService" />
      <endpoint name="SdkJobDebugServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IJobDebugService" />
      <endpoint name="SdkProcessServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IProcessService" />
      <endpoint name="SdkServerServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IServerService" />
      <endpoint name="SdkTenantServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.ITenantService" />
      <endpoint name="SdkUserServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IUserService" />
      <endpoint name="SdkResourceServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IResourceService" />
      <endpoint name="SdkBusinessEventServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IBusinessEventService" />
      <endpoint name="SdkEntityServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IEntityService" />
      <endpoint name="SdkDataAccessServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IDataAccessService" />
      <endpoint name="SdkCategoryServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.ICategoryService" />
      <endpoint name="SdkChecklistServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IChecklistService" />
      <endpoint name="SdkWorkQueueDefinitionServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IWorkQueueDefinitionService" />
      <endpoint name="SdkSecurityServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.ISecurityService" />
      <endpoint name="SdkBusinessCalendarServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IBusinessCalendarService" />
      <endpoint name="SdkDynamicResourceServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IDynamicResourceService" />
      <endpoint name="SdkDocumentGenerationServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IDocumentGenerationService" />
      <endpoint name="SdkBusinessRuleServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IBusinessRuleService" />
      <endpoint name="SdkCaptureConfigurationServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.ICaptureConfigurationService" />
      <endpoint name="SdkCaptureDocumentServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.ICaptureDocumentService" />
      <endpoint name="SdkCaptureRuntimeServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.ICaptureRuntimeService" />
      <endpoint name="SdkCaptureProjectServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.ICaptureProjectService" />
      <endpoint name="SdkCaptureProjectServiceStreamingEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpStreamingBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.ICaptureProjectService" />
      <endpoint name="SdkDynamicsCrmIntegrationServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IDynamicsCrmIntegrationService" />
      <endpoint name="SdkDynamicsAxIntegrationServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IDynamicsAxIntegrationService" />
      <endpoint name="SdkSharepointIntegrationServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.ISharepointIntegrationService" />
      <endpoint name="SdkExchangeIntegrationServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IExchangeIntegrationService" />
      <endpoint name="SdkCmisIntegrationServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.ICmisIntegrationService" />
      <endpoint name="SdkSimulationServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.ISimulationService" />
      <endpoint name="SdkCaptureKfsServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.ICaptureKfsService" />
      <endpoint name="SdkExportConnectorServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IExportConnectorService" />
      <endpoint name="SdkDocumentViewerServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IDocumentViewerService" />
      <endpoint name="SdkBusinessIntelligenceServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IBusinessIntelligenceService" />
      <endpoint name="SdkAssetServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IAssetService" />
      <endpoint name="SdkKapowIntegrationServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IKapowIntegrationService" />
      <endpoint name="SdkLinkedServerServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.ILinkedServerService" />
      <endpoint name="SdkLicenseServerServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.ILicenseServerService" />
      <endpoint name="SdkTenantConfigurationServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.ITenantConfigurationService" />
      <endpoint name="SdkPersonaServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IPersonaService" />
      <endpoint name="SdkQueryServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IQueryService" />
      <endpoint name="SdkPackageServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IPackageService" />
      <endpoint name="SdkSigningServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.ISigningService" />
      <endpoint name="SdkDocumentSetServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IDocumentSetService" />
      <!--END SDK END POINTS-->
      <!--Integration End points-->
      <endpoint name="SharepointCommunicatorServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_SharepointCommunicatorService" contract="Agility.Server.Core.Model.Interfaces.Integration.ISharepointCommunicatorService" />
      <endpoint name="TrimCommunicatorServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_TrimCommunicatorService" contract="Agility.Server.Core.Model.Interfaces.Integration.ITrimCommunicatorService" />
      <endpoint name="DynamicsAxCommunicatorServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_DynamicsAxCommunicatorService" contract="Agility.Server.Core.Model.Interfaces.Integration.IDynamicsAxCommunicatorService" />
      <endpoint name="SdkCCMIntegrationServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.ICCMIntegrationService" />
      <endpoint name="SdkPerceptiveContentIntegrationServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.IPerceptiveContentIntegrationService" />
      <!--Integration End points-->
      <endpoint name="AlbinServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" contract="TestingService.albinPortType" address="" />
      <endpoint name="MessageConnectorServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" contract="MessageConnectorService.tsl1PortType" address="" />
      <endpoint name="ConnectorServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" contract="ConnectorService.tsl1PortType" address="" />
      <endpoint name="ConfigurationServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_Service" contract="ConfigurationService.configPortType" address="" />
      <endpoint name="InsightDataServiceExtEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_InsightDataService" contract="WcfDataService.IDataServiceExt" address="" />
      <endpoint name="TransformationServerExternalServiceEndPoint" binding="netTcpBinding" bindingConfiguration="TransformationServerExternalService_Binding" contract="Agility.Server.Core.Model.Interfaces.Services.ITransformationServerExternalService" address="" />
      <endpoint name="AssemblyExecutorServiceEndPoint" binding="netNamedPipeBinding" bindingConfiguration="AssemblyExecutorBinding_Service" behaviorConfiguration="CoreExecutorEndPointBehaviour" contract="Agility.Server.Core.Model.Interfaces.ScriptSecurity.IAssemblyExecutorService" address="" />
      <!--Signing integration service-->
      <endpoint name="SdkSigningIntegrationServiceEndpoint" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_SigningIntegrationService" behaviorConfiguration="SdkServicesEndPointBehavior" contract="Agility.Sdk.Model.Interfaces.Services.ISigningIntegrationService" />
    </client>
  </system.serviceModel>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="protobuf-net" publicKeyToken="257B51D87D2E4D67" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.622" newVersion="2.0.0.622" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30AD4FE6B2A6AEED" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.WindowsAzure.Storage" publicKeyToken="31BF3856AD364E35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.3.0" newVersion="3.0.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.WindowsAzure.ServiceRuntime" publicKeyToken="31BF3856AD364E35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.7.0.0" newVersion="2.7.0.0" />
      </dependentAssembly>
      <!--
      <dependentAssembly>
        <assemblyIdentity name="Atalasoft.dotImage.Pdf" publicKeyToken="2B02B46F7326F73B" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-10.7.0.2694" newVersion="10.7.0.2694"/>
      </dependentAssembly>
         <dependentAssembly>
            <assemblyIdentity name="Atalasoft.Shared" publicKeyToken="2B02B46F7326F73B" culture="neutral"/>
            <bindingRedirect oldVersion="0.0.0.0-10.7.0.2694" newVersion="10.7.0.2694"/>
         </dependentAssembly>
         <dependentAssembly>
            <assemblyIdentity name="Atalasoft.PdfDoc" publicKeyToken="2B02B46F7326F73B" culture="neutral"/>
            <bindingRedirect oldVersion="0.0.0.0-10.7.0.2694" newVersion="10.7.0.2694"/>
         </dependentAssembly>
         <dependentAssembly>
            <assemblyIdentity name="Atalasoft.dotImage" publicKeyToken="2B02B46F7326F73B" culture="neutral"/>
            <bindingRedirect oldVersion="0.0.0.0-10.7.0.2694" newVersion="10.7.0.2694"/>
         </dependentAssembly>
      -->
      <dependentAssembly>
        <assemblyIdentity name="ACLicInf" publicKeyToken="2a06c44ecf114f0f" culture="neutral" />
        <bindingRedirect oldVersion="6.0.0.2" newVersion="6.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="KSALicenseCommon" publicKeyToken="2a06c44ecf114f0f" culture="neutral" />
        <bindingRedirect oldVersion="2.1.0.2" newVersion="6.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="KSALicSrvInf" publicKeyToken="2a06c44ecf114f0f" culture="neutral" />
        <bindingRedirect oldVersion="2.1.0.2" newVersion="6.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Kofax.Licensing.Activation" publicKeyToken="2a06c44ecf114f0f" culture="neutral" />
        <bindingRedirect oldVersion="2.1.0.2" newVersion="6.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Kofax.Licensing.SharedData" publicKeyToken="2a06c44ecf114f0f" culture="neutral" />
        <bindingRedirect oldVersion="2.1.0.2" newVersion="6.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="KSALicClnt" publicKeyToken="2a06c44ecf114f0f" culture="neutral" />
        <bindingRedirect oldVersion="2.0.0.0" newVersion="6.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.EnterpriseLibrary.Common" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="6.0.0.0" newVersion="5.0.505.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Remotion.Linq" publicKeyToken="fee00910d6e5f53b" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.0.0" newVersion="2.2.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Remotion.Linq.EagerFetching" publicKeyToken="fee00910d6e5f53b" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.0.0" newVersion="2.2.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>